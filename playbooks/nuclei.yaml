---
#Web service template based scan
- name: Perform scan with Nuclei
  hosts: all
  tasks:

    # Invoke nuclei container waiting for the container to complete
    - name: Run nuclei scan
      community.docker.docker_container:
        name: nuclei_scan
        image: "projectdiscovery/nuclei"
        command: "-list /tmp/scan_results/httpx-results.txt -j -o /tmp/scan_results/nuclei-results.json"
        volumes:
          - "{{ scan_work_dir }}:/tmp"
        state: "started"
        detach: false
      register: nuclei_container_result

    #Small task to list generated nuclei json report.
    - name: Find Nuclei report
      ansible.builtin.find:
        paths: "{{ scan_results_dir }}"
        patterns: "nuclei-results.json"
      register: "nuclei_reports"

    #Small task to read previous listed json report content.
    #Content is stored as base64 in a variable
    - name: Read in Nuclei report content
      ansible.builtin.slurp:
        src: "{{ item.path }}"
      loop: "{{ nuclei_reports.files }}"
      register: "nuclei_reports_content"

    #Iterate over stored report content, decode it from base64 and send it to a defectdojo instance. 
    #Specific defecdojo variables are defined in zuul config file and secrets.
    - name: Send Nuclei results to Defect Dojo
      #no_log: true
      ansible.builtin.uri:
        url: "{{ pipeline_conf.dojo_url }}/api/v2/import-scan/"
        headers:
          Authorization: "{{ ('Token ' + pipeline_conf.dojo_api_key) if pipeline_conf.dojo_api_key is defined else pipeline_conf.dojo_auth }}"
        method: "POST"
        body_format: "form-multipart"
        body:
          engagement: "{{ pipeline_conf[engagement] }}"
          scan_type: "Nuclei Scan"
          verified: "true"
          active: "true"
          skip_duplicates: "false"
          close_old_findings: "true"
          file: "{{ zj_item['content'] | b64decode }}"
      loop: "{{ nuclei_reports_content.results }}"
      loop_control:
        loop_var: zj_item
      when:
        - "engagement is defined and engagement"
        - "pipeline_conf is defined"
