---
#Web service template based scan
- name: Perform scan with Nuclei
  hosts: localhost
  tasks:

    #Small task to list generated nuclei json report.
    - name: Find Nuclei report
      ansible.builtin.find:
        paths: "/home/gtema/workspace/github/SovereignCloudStack/security-infra-scan-pipeline/"
        patterns: "nuclei-results.json"
      register: "nuclei_reports"

    #Small task to read previous listed json report content.
    #Content is stored as base64 in a variable
    - name: Read in Nuclei report content
      ansible.builtin.slurp:
        src: "{{ item.path }}"
      loop: "{{ nuclei_reports.files }}"
      register: "nuclei_reports_content"

    #Iterate over stored report content, decode it from base64 and send it to a defectdojo instance. 
    #Specific defecdojo variables are defined in zuul config file and secrets.
    - name: Send Nuclei results to Defect Dojo
      #no_log: true
      ansible.builtin.uri:
        # url: "https://defectdojo.infra.sovereignit.cloud/api/v2/import-scan/"
        url: "https://demo.defectdojo.com/api/v2/import-scan/"
        headers:
          #Authorization: "Token 58ae92236d261cf03f1576e123e334d092e448b3"
          Authorization: "Basic YWRtaW46MURlZmVjdGRvam9AZGVtbyNhcHBzZWM="
        method: "POST"
        body_format: "form-multipart"
        body:
          engagement: "1"
          scan_type: "Nuclei Scan"
          verified: "true"
          active: "true"
          skip_duplicates: "false"
          close_old_findings: "true"
          file: 
            filename: "{{ zj_item['path'] }}"
          #mime_type: "text/plain"
          #name: "{{ zj_item['name'] }}"
          #content: "{{ zj_item['content'] | b64decode }}"
        status_code: [200, 201]
      loop: "{{ nuclei_reports.files }}"
      loop_control:
        loop_var: zj_item
