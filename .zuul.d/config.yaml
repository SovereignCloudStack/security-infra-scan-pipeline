---
- project:
    name: SovereignCloudStack/security-infra-scan-pipeline
    default-branch: main
    merge-mode: "squash-merge"
    check:
      jobs:
        - scs-baseline-security-scan-test
        - scs-full-security-scan-test
        - scs-greenbone-security-scan-test
    gate:
      jobs:
        - scs-baseline-security-scan-test
        - scs-full-security-scan-test
        - scs-greenbone-security-scan-test
    periodic-daily:
      jobs:
        - scs-baseline-security-scan
    periodic-weekly:
      jobs:
        - scs-full-security-scan
        - scs-greenbone-security-scan

- job:
    name: scs-security-scan-base
    parent: base
    description: |
      Base for any security scanning job
    # NOTE(90n20): Default timeout of all jobs has been increased to 3hs due to the amount of targets being defined.
    timeout: 10800 #3hs
    pre-run: playbooks/pre.yaml
    post-run: playbooks/post.yaml
    nodeset: ubuntu-jammy-large
    vars:
      # Where to store intermediate data
      scan_work_dir: "{{ ansible_user_dir }}/wrk"
      # Where to flush (and read) results from
      scan_results_dir: "{{ ansible_user_dir }}/wrk/scan_results"
      # Default list of scan targets.
      # NOTE(gtema): It would be nice in tests to use test instance itself, but
      # it only exposes SSH port what makes scanning very fast and reports
      # empty. We potentially want to see how the reports are looking like also 
      # in tests.
      scan_targets:
        #- capi-jsgen.moin.k8s.scs.community
        #- cluster-gen.moin.k8s.scs.community
        #- dex.scs.community
        #- maschinenraum.scs.community
        #- moin.k8s.scs.community
        - monitoring.scs.community
        #- registry.scs.community
        #- status-api.k8s.scs.community
        #- status-idp.k8s.scs.community
        #- status.k8s.scs.community
        #- viz.moin.k8s.scs.community
        #- zuul-dev.scs.community
        #- zuul-logs-dev.scs.community
        #- zuul-logs.scs.community
        - zuul.scs.community
        - api.gx-scs.sovereignit.cloud
        - compliance.sovereignit.cloud
        #- health.gx-scs.sovereignit.cloud
        #- iam.gx-scs.sovereignit.cloud
        - ui.gx-scs.sovereignit.cloud

- job:
    name: scs-baseline-security-scan-base
    parent: scs-security-scan-base
    description: |
      Base for the security scan involving naabu/nuclei/httpx/OWASP Zap.

      OWASP Zap test is performed in the baseline configuration
    run: playbooks/daily-scan.yaml
    vars:
      zap_script: "zap-baseline.py"

- job:
    name: scs-baseline-security-scan
    parent: scs-baseline-security-scan-base
    description: |
      Perform baseline scan of the resources
    secrets:
     - name: pipeline_conf
       secret: SECRET_SECURITY_INFRA_SCAN_PIPELINE
    vars:
      # TODO: engagement_id is not a secret, define id here directly
      # Since in Zuul it is not possible to define vars from secrets on the
      # job level pass a key name down to the job
      engagement: "daily_scan_engagement_id"

- job:
    name: scs-baseline-security-scan-test
    parent: scs-baseline-security-scan-base
    description: |
      Test baseline-security-scan job on the test resources.

      Since this is an untrusted job it does not have access to the secrets
      and thus not posting results to the DefectDojo.
    vars:
      pipeline_conf:
        dojo_url: https://demo.defectdojo.com/api/v2/import-scan/
        daily_scan_engagement_id: 1
        weekly_scan_engagement_id: 1
        dojo_auth: "Basic YWRtaW46MURlZmVjdGRvam9AZGVtbyNhcHBzZWM="

- job:
    name: scs-full-security-scan-base
    parent: scs-security-scan-base
    description: |
      Base for the security scan involving naabu/nuclei/httpx/OWASP Zap.

      OWASP Zap test is performed in the full configuration
    # NOTE(90n20): zap-full-scan.py includes both ZAP spider and ajax spider 
    # and then performs a full active scan, this is, launch attacks on the 
    # targets. This runs for a long period of time, so the timeout has to be adjusted. 
    timeout: 21600 #6h
    run: playbooks/daily-scan.yaml
    vars:
      zap_script: "zap-full-scan.py"

- job:
    name: scs-full-security-scan-test
    parent: scs-full-security-scan-base
    description: |
      Test full-security-scan job on the test resources.

      Since this is an untrusted job it does not have access to the secrets
      and thus not posting results to the DefectDojo.

- job:
    name: scs-full-security-scan
    parent: scs-full-security-scan-base
    secrets:
     - name: pipeline_conf
       secret: SECRET_SECURITY_INFRA_SCAN_PIPELINE
    vars:
      # TODO: engagement_id is not a secret, define id here directly
      # Since in Zuul it is not possible to define vars from secrets on the
      # job level pass a key name down to the job
      engagement: "weekly_scan_engagement_id"

- job:
    name: scs-greenbone-security-scan-base
    parent: scs-security-scan-base
    description: |
      Perform baseline scan of the resources
    nodeset: ubuntu-jammy-large
    timeout: 21600 #6h
    run: playbooks/greenbone.yaml

- job:
    name: scs-greenbone-security-scan
    parent: scs-greenbone-security-scan-base
    secrets:
     - name: pipeline_conf
       secret: SECRET_SECURITY_INFRA_SCAN_PIPELINE
    vars:
      # TODO: engagement_id is not a secret, define id here directly
      # Since in Zuul it is not possible to define vars from secrets on the
      # job level pass a key name down to the job
      engagement: "weekly_scan_engagement_id"

- job:
    name: scs-greenbone-security-scan-test
    parent: scs-greenbone-security-scan-base
